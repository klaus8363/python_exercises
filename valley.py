
def counting_valleys(steps, path):
	elev = 0
	valleys = 0
	downwards = False
	for i in range(len(path)):
		if path[i] == 'U': # UP
			elev += 1

			if elev == 0:
				valleys += 1
				#downwards = False

		else:
			elev -= 1
			#if elev < 0:
				#downwards = True
	print(valleys)
	return valleys

def test_case_1():
    assert counting_valleys(6, 'UDDDUU') == 1

def test_case_2():
    assert counting_valleys(8, 'UDDDUDUU') == 1

def test_case_3():
    string = 'DDUUUUUUDDUUUDDUDDUUDUDDDDDUDDUDUDDUUUUUUDUDDDUDDD'
    assert counting_valleys(50, string) == 3

def test_case_4():
    string = 'DDDUDUDDUDDUUUUUDDUUDUDDUUDUDDUDDDUUUDDDUUUUUUUDDDUUUUDDDUDUDDDUUUUUDUDDDDDUUUUUDDUUDDUDDUUDUDDUUUDD'
    assert counting_valleys(100, string) == 8

def test_case_5():
    string = 'UDDDDDDUUDUDDUUDUUDDDUDDDUUUDUUUUDDUUDDDUDDUUUDUDUDUUUDUDUUDUUUDUUDDDUDDDDDUDDUUDUUDUDDUDDUDUUDDUUDDDDDUUDDUUUUDUDDDDDUUDDUDDDDDUDDDDDUUUDDUUUUDDDDUUDDDDUUDDDDUDDUUDDDDUDUUDUDDDUUDUDDDUDUDDUUUDUUDDDUDUDUDUDUDUUUDUUDUDUUDDUUUDDDDUDDDUDUUDDDDUUDDDUUDDDUUDUDUUUUDUUUDUDDUDDDUUUDUDDUDDUUUDUDUUUUDDUUUUDUDUDDUDDUUDDUUUUDDUDUDUDDDDDUUDUDUDDUUDDDDUUDUUUUUDDUDDUUUUUDDDDUDDDDUDDDDUUDUUUUUUUDUUDDUUDUDDDDUDUDDDUUUUUDDDDUDDUDDDUDDUUUDDUUUUUDUDDUDUUUUUDUUUUUUDUDDDUDUUUDUUUDDDUUUDUUUUDDDUUDUDUDUUUDUDDUDDDUUDDDDUDUUDUUDUDDUUDDUUUDUUUUUDUUDUUUUUDUUUDDUUDDDUDDUUUDUDUUDDDDUDUUDUDDUDDDDDDUUDUDUUDUUUDDUUDUDDDDUDDUUDUUDDUDUDDDUDDDDDUUUDDUUUUUDDDDDDUDUDDDUUUDUUUDUDUUUUDDDUUUDUUUUUUDDDUDUDUUDUDDDUUDUDDDDUUUUUDUDDDDUUDDDUDDUDDUDUDDUDUDDUDUDUUUUUDDDDDDUUDDDDDUDUDDUUDUUDUDDUDUDDDUUDUUUUUDDDUUDDUDDUDDUUDDDDDDDUDUDUUUUDDUDUDDUDDDUDDUDUDUUDDUDUUDUDUUDUUDUUDUDUUDDDDDDUDDUUUUUUDUUDDUUUUDUDUDUDUUUDDUUDUUDUDDDUDUUUDDUUUDUDDDUUUUUDDUUUDDUDUDUUUDDDUDUUUDDDUUUDUUDUUUDDUUDUDUDDDUUUDUDUUDDUUDUUDUDUDDUUDDUUDUDUDUUUDDUDDUUDUDD'
    assert counting_valleys(1000, string) == 13

    
test_case_1()
test_case_2()
test_case_3()
test_case_4()
test_case_5()
